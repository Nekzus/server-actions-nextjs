name: Cleanup Old Workflow Runs

on:
  schedule:
    - cron: '0 0 * * 0' # Se ejecuta semanalmente los domingos a las 00:00 UTC
  workflow_dispatch: # Permite ejecutarlo manualmente desde la interfaz de GitHub

jobs:
  cleanup:
    runs-on: ubuntu-latest

    steps:
      - name: Set up GitHub CLI and jq
        run: |
          sudo apt-get install -y gh jq

      - name: Authenticate GitHub CLI
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "${GITHUB_TOKEN}" | gh auth login --with-token

      - name: Delete old workflow runs
        env:
          DAYS_TO_KEEP: 30 # Cambia el número de días según sea necesario
          PER_PAGE: 100    # Número de ejecuciones por página (máximo 100)
          MAX_DELETIONS: 50 # Número máximo de ejecuciones a eliminar por ciclo
        run: |
          # Obtener la fecha de límite en formato ISO 8601
          DELETE_BEFORE_DATE=$(date -d "$DAYS_TO_KEEP days ago" --utc +%Y-%m-%dT%H:%M:%SZ)
          
          # Contador de eliminaciones
          DELETED_COUNT=0

          # Manejo de paginación manual
          NEXT_CURSOR=""

          while true; do
            # Obtener lista de ejecuciones completadas y antiguas en una sola llamada
            RUNS=$(gh api graphql -f query='
              query($cursor: String, $limit: Int!) {
                repository(owner: "'${{ github.repository_owner }}'", name: "'${{ github.event.repository.name }}'") {
                  workflowRuns(first: $limit, after: $cursor, orderBy: {field: CREATED_AT, direction: DESC}, statuses: COMPLETED) {
                    edges {
                      node {
                        id
                        createdAt
                      }
                      cursor
                    }
                  }
                }
              }
            ' -F cursor="${NEXT_CURSOR}" -F limit="${PER_PAGE}" \
            | jq -r --arg DATE "$DELETE_BEFORE_DATE" '
                .data.repository.workflowRuns.edges | map(select(.node.createdAt < $DATE)) | .[] | .node.id + "," + .cursor')

            # Si no hay más ejecuciones, salir del bucle
            if [ -z "$RUNS" ]; then
              echo "No more old workflow runs to delete."
              break
            fi

            # Iterar sobre cada ejecución y eliminarla
            while IFS=, read -r run_id cursor; do
              echo "Deleting workflow run with ID: $run_id"
              gh run delete "$run_id" -y || continue
              DELETED_COUNT=$((DELETED_COUNT+1))

              # Esperar un segundo entre eliminaciones para no sobrecargar la API
              sleep 1

              # Si alcanzamos el número máximo de eliminaciones, salir del bucle
              if [ $DELETED_COUNT -ge $MAX_DELETIONS ]; then
                echo "Reached maximum deletions for this run: $MAX_DELETIONS"
                break 2
              fi

              # Actualizar el cursor para la siguiente paginación
              NEXT_CURSOR=$cursor
            done <<< "$RUNS"
          done

          echo "Total workflow runs deleted: $DELETED_COUNT"
